version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: coronas_postgres
    environment:
      POSTGRES_DB: coronas_db
      POSTGRES_USER: coronas_user
      POSTGRES_PASSWORD: coronas_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - coronas_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U coronas_user -d coronas_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    container_name: coronas_adminer
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - coronas_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: coronas_app
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://coronas_user:coronas_password@postgres:5432/coronas_db
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - coronas_network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://localhost:3001 || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  coronas_network:
    driver: bridge
